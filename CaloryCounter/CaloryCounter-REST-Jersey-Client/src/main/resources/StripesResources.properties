topTitle=Calories Counter - REST Client

home.titlekey=Home | Calories Counter - REST Client
home.title=Calories Counter via AJAX
home.text.p1=We can do it better!

navigation.home=HOME
navigation.users=USERS
navigation.activities=ACTIVITIES
navigation.records=RECORDS

users.titlekey=Users | Calories Counter - REST Client
users.title=Users
users.username=Username
users.name=Name
users.age=Age
users.sex=Sex
users.sex.male=Male
users.sex.female=Female
users.sex.other=Other
users.password=Password
users.weightCategory=Weight category
users.findbyusername=Find by username
users.findBtn=Search
users.editBtn=Edit
users.deleteBtn=Delete
users.newBtn=New user
users.createBtn=Create

users.weightCat._130_=130-154 lbs
users.weightCat._155_=155-179 lbs
users.weightCat._180_=180-204 lbs
users.weightCat._205_=205+ lbs

users.state=State
users.state.emptyUsername=Username cannot be empty!
users.state.searching=Searching...
users.state.deleting=Deleting...
users.state.updating=Updating...
users.state.creating=Creating...
users.state.deleted=User was deleted.
users.state.found=User was found.
users.state.updated=User was updated.
users.state.created=User was created.
users.state.notDeleted=User was NOT deleted.
users.state.notFound=User was NOT found.
users.state.notUpdated=User was NOT updated.
users.state.notCreated=User was NOT created.

record.date=Date
record.activity=Activity
record.duration=Duration
record.burnt_calories=Burnt calories
record.weight=Weight

records.titlekey=User\u00b4s records | Calories Counter - REST Client
records.title=User\u00b4s records
records.username=Username
records.name=Name
records.age=Age
records.sex=Sex
records.sex.male=Male
records.sex.female=Female
records.sex.other=Other
records.password=Password
records.weightCategory=Weight category
records.findbyusername=Find by username
records.findBtn=Search
records.editBtn=Edit
records.deleteBtn=Delete
records.newBtn=New record
records.createBtn=Create

records.weightCat._130_=130-154 lbs
records.weightCat._155_=155-179 lbs
records.weightCat._180_=180-204 lbs
records.weightCat._205_=205+ lbs

records.state=State
records.state.emptyUsername=First find user!
records.state.searching=Searching...
records.state.deleting=Deleting...
records.state.updating=Updating...
records.state.creating=Creating...
records.state.deleted=Record was deleted.
records.state.found=Record was found.
records.state.updated=Record was updated.
records.state.created=Record was created.
records.state.notDeleted=Record was NOT deleted.
records.state.notFound=Record was NOT found.
records.state.notUpdated=Record was NOT updated.
records.state.notCreated=Record was NOT created.


activities.titlekey=Activities | Calories Counter - REST Client
activities.title=Activities


# Resource strings used by the <stripes:errors> tag when there are no nested tags
stripes.errors.header=<div class="errorbox" style="border: 1px solid red; background-color: yellow; margin: 10px; padding: 10px;">Please fix the following errors:<ul>
stripes.errors.beforeError=<li>
stripes.errors.afterError=</li>
stripes.errors.footer=</ul></div>

# Resource strings used by the <stripes:errors> tag when displaying errors for a
# specific field (e.g. <stripes:errors field="password"/>). If not supplied the
# values above will be used instead.
stripes.fieldErrors.header=
stripes.fieldErrors.beforeError=<span style="color: #b72222;">
stripes.fieldErrors.afterError=</span><br />
stripes.fieldErrors.footer=

# Resource strings used by the stripes:messages tag
stripes.messages.header=<div class="messages" style="border: 1px solid darkgreen; background-color: lightgreen; margin: 10px; padding: 10px;"><ul>
stripes.messages.beforeMessage=<li>
stripes.messages.afterMessage=</li>
stripes.messages.footer=</ul></div>

# Validation error messages produced by Stripes' built-in converter classes. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'invalidNumber' error for a field 'age' of a form posting to
# '/user/Profile.action', the keys looked for (in order) would be:
#      1: /user/Profile.action.age.invalidNumber
#      2: /user/Profile.action.age.errorMessage
#      3: age.errorMessage
#      4: /user/Profile.action.invalidNumber
#      5: converter.number.invalidNumber
converter.number.invalidNumber=The value ({1}) entered in field {0} must be a valid number
converter.byte.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.short.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.integer.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.float.outOfRange=The value ({1}) entered in field {0} was out of the range {2} to {3}
converter.enum.notAnEnumeratedValue=The value "{1}" is not a valid value for field {0}
converter.date.invalidDate=The value ({1}) entered in field {0} must be a valid date
converter.email.invalidEmail=The value ({1}) entered is not a valid email address
converter.creditCard.invalidCreditCard=The value ({1}) entered is not a valid credit card number

# Validation error messages produced by Stripes' annotation based validations. These
# are default error messages and can be overridden on per-field and per-form levels.
# Using the 'valueNotPresent' required field error for a field 'username' of a form
# posting to '/user/Register.action', the keys looked for (in order) would be:
#      1: /user/Register.action.username.valueNotPresent
#      2: /user/Register.action.username.errorMessage
#      3: username.errorMessage
#      4: /user/Register.action.valueNotPresent
#      5: validation.required.valueNotPresent
validation.required.valueNotPresent={0} is a required field
validation.minlength.valueTooShort={0} must be at least {2} characters long
validation.maxlength.valueTooLong={0} must be no more than {2} characters long
validation.minvalue.valueBelowMinimum=The minimum allowed value for {0} is {2}
validation.maxvalue.valueAboveMaximum=The maximum allowed value for {0} is {2}
validation.mask.valueDoesNotMatch=<em>{1}</em> is not a valid {0}
validation.expression.valueFailedExpression=The value supplied ({1}) for field {0} is invalid
validation.file.postBodyTooBig=Total upload size of {3} KB exceeds the maximum size of {2} KB

