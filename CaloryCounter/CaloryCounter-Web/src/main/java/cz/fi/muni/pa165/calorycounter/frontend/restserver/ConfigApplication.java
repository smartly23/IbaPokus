package cz.fi.muni.pa165.calorycounter.frontend.restserver;

import java.util.HashSet;
import java.util.Set;
import javax.ws.rs.core.Application;
//import javax.ws.rs.ApplicationPath;

/**
 * Root servlet class to register all REST resources
 *
 * @author smartly23 Martin Pasko
 */
//no need if we have servlet-mapping
//@ApplicationPath("resources")
public class ConfigApplication extends Application {

    @Override
    public Set<Class<?>> getClasses() {
        Set<Class<?>> resources = new HashSet<Class<?>>();
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.ProfileRestResource.class);
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.ActivityRestResource.class);
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.RecordRestResource.class);
        return resources;
    }

    /**
     * Do not modify addRestResourceClasses() method. It is automatically
     * re-generated by NetBeans REST support to populate given list with all
     * resources defined in the project.
     */
    // toto si tu pridal netbeans. Pri spustani z prikazovej riadky to netreba.
    private void addRestResourceClasses(Set<Class<?>> resources) {
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.ProfileRestResource.class);
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.ActivityRestResource.class);
        resources.add(cz.fi.muni.pa165.calorycounter.frontend.restserver.RecordRestResource.class);
    }
}
